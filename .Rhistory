col = "white",
col.legend = tmap::tm_legend_hide()) +
tmap::tm_graticules(ticks = TRUE,
lwd = 0.5,
col = "grey50",
labels.size = 1,
n.y = 6) +
tmap::tm_shape(ca) +
tmap::tm_polygons() +
tmap::tm_shape(r) +
tmap::tm_raster(col.scale = tmap::tm_scale_rank(
values = "brewer.rd_bu", midpoint = 0, breaks = seq(-100, 100, by = 25)),
col.legend = tmap::tm_legend(title = "% Delta",
position = c("right", "top"),
text.size = 0.9,
frame = TRUE,
frame.lwd = 0.001,
title.size = 1.1,
bg.alpha = 0,
width = 6,
height = 11))
# Map
tt <- tmap::tm_shape(r) +
tmap::tm_raster(col.scale = tmap::tm_scale_continuous(),
col = "white",
col.legend = tmap::tm_legend_hide()) +
tmap::tm_graticules(ticks = TRUE,
lwd = 0.5,
col = "grey50",
labels.size = 1,
n.y = 6) +
tmap::tm_shape(ca) +
tmap::tm_polygons() +
tmap::tm_shape(r) +
tmap::tm_raster(col.scale = tmap::tm_scale(
values = "brewer.rd_bu", midpoint = 0, breaks = seq(-100, 100, by = 25)),
col.legend = tmap::tm_legend(title = "% Delta",
position = c("right", "top"),
text.size = 0.9,
frame = TRUE,
frame.lwd = 0.001,
title.size = 1.1,
bg.alpha = 0,
width = 6,
height = 11))
tt
# Map
tt <- tmap::tm_shape(r) +
tmap::tm_raster(col.scale = tmap::tm_scale_continuous(),
col = "white",
col.legend = tmap::tm_legend_hide()) +
tmap::tm_graticules(ticks = TRUE,
lwd = 0.5,
col = "grey50",
labels.size = 1,
n.y = 6) +
tmap::tm_shape(ca) +
tmap::tm_polygons() +
tmap::tm_shape(r) +
tmap::tm_raster(col.scale = tmap::tm_scale(
values = "brewer.rd_bu", midpoint = 0, breaks = seq(-100, 100, by = 25)),
col.legend = tmap::tm_legend(title = "% Delta",
position = c("right", "top"),
text.size = 0.9,
frame = TRUE,
frame.lwd = 0.001,
title.size = 1.1,
bg.alpha = 0,
width = 6,
height = 11)) +
tmap::tm_shape(ca) +
tmap::tm_polygons(fill_alpha = 0.1) +
tmap::tm_title(paste0(def %>% toupper(), " | ",
model2, " | ", min(yr_range), "-", max(yr_range),
" | % persist.", " | ", persist_thresh, "%")) +
tmap::tm_scalebar(position = c("left", "bottom"),
text.size = 0.7) +
tmap::tm_layout(
legend.title.size = 1.4,
bg.color = "white",
legend.frame = FALSE)
tt
# Map
tt <- tmap::tm_shape(r) +
tmap::tm_raster(col.scale = tmap::tm_scale_continuous(),
col = "white",
col.legend = tmap::tm_legend_hide()) +
tmap::tm_graticules(ticks = TRUE,
lwd = 0.5,
col = "grey50",
labels.size = 1,
n.y = 6) +
tmap::tm_shape(ca) +
tmap::tm_polygons() +
tmap::tm_shape(r) +
tmap::tm_raster(col.scale = tmap::tm_scale(
values = "brewer.rd_bu", midpoint = 0, breaks = seq(-100, 100, by = 25)),
col.legend = tmap::tm_legend(title = "% Delta",
position = c("right", "top"),
text.size = 0.9,
frame = TRUE,
frame.lwd = 0.001,
title.size = 1.1,
bg.alpha = 0,
width = 6,
height = 11)) +
tmap::tm_shape(ca) +
tmap::tm_polygons(fill_alpha = 0.1) +
tmap::tm_title(paste0(def %>% toupper(), " | ",
model2, " | ", min(projrange), "-", max(projrange), "minus",
min(histrange), "-", max(histrange),
" | % persist.", " | ", persist_thresh, "%")) +
tmap::tm_scalebar(position = c("left", "bottom"),
text.size = 0.7) +
tmap::tm_layout(
legend.title.size = 1.4,
bg.color = "white",
legend.frame = FALSE)
tt
# Map
tt <- tmap::tm_shape(r) +
tmap::tm_raster(col.scale = tmap::tm_scale_continuous(),
col = "white",
col.legend = tmap::tm_legend_hide()) +
tmap::tm_graticules(ticks = TRUE,
lwd = 0.5,
col = "grey50",
labels.size = 1,
n.y = 6) +
tmap::tm_shape(ca) +
tmap::tm_polygons() +
tmap::tm_shape(r) +
tmap::tm_raster(col.scale = tmap::tm_scale(
values = "brewer.rd_bu", midpoint = 0, breaks = seq(-100, 100, by = 25)),
col.legend = tmap::tm_legend(title = "% Delta",
position = c("right", "top"),
text.size = 0.9,
frame = TRUE,
frame.lwd = 0.001,
title.size = 1.1,
bg.alpha = 0,
width = 6,
height = 11)) +
tmap::tm_shape(ca) +
tmap::tm_polygons(fill_alpha = 0.1) +
tmap::tm_title(paste0(def %>% toupper(), " | ",
model2, " | ", min(projrange), "-", max(projrange), "-",
min(histrange), "-", max(histrange),
" | % persist.", " | ", persist_thresh, "%")) +
tmap::tm_scalebar(position = c("left", "bottom"),
text.size = 0.7) +
tmap::tm_layout(
legend.title.size = 1.4,
bg.color = "white",
legend.frame = FALSE)
tt
# Map
tt <- tmap::tm_shape(r) +
tmap::tm_raster(col.scale = tmap::tm_scale_continuous(),
col = "white",
col.legend = tmap::tm_legend_hide()) +
tmap::tm_graticules(ticks = TRUE,
lwd = 0.5,
col = "grey50",
labels.size = 1,
n.y = 6) +
tmap::tm_shape(ca) +
tmap::tm_polygons() +
tmap::tm_shape(r) +
tmap::tm_raster(col.scale = tmap::tm_scale(
values = "brewer.rd_bu", midpoint = 0, breaks = seq(-100, 100, by = 25)),
col.legend = tmap::tm_legend(title = "% Delta",
position = c("right", "top"),
text.size = 0.9,
frame = TRUE,
frame.lwd = 0.001,
title.size = 1.1,
bg.alpha = 0,
width = 6,
height = 11)) +
tmap::tm_shape(ca) +
tmap::tm_polygons(fill_alpha = 0.1) +
tmap::tm_title(paste0(def %>% toupper(), " | ",
model2, " | ", min(projrange), "-", max(projrange), "-",
min(histrange), "-", max(histrange),
" | ", persist_thresh, "%")) +
tmap::tm_scalebar(position = c("left", "bottom"),
text.size = 0.7) +
tmap::tm_layout(
legend.title.size = 1.4,
bg.color = "white",
legend.frame = FALSE)
tt
?tm_title
devtools::build_site()
devtools::build_site()
devtools::build_site()
devtools::build_site()
usethis::use_mit_license("Jessica A. Bolin")
devtools::build_site
devtools::build_site()
utils::globalVariables(c("model", "year", "x", "y", "cellID", "val"))
devtools::build_site()
library(abalone)
ens_stress <- build_stress(percentdays = abalone::percentdays,
esm = "ens",
yrst = 1990,
yrend = 1992,
progress = FALSE,
save_path = NULL)
ens_stress
ens_stress <- build_stress(percentdays = abalone::percentdays,
esm = "ens",
yrst = 1990,
yrend = 1992,
progress = FALSE,
save_path = NULL)
ens_stress
terra::plot(ens_stress)
ens_stress <- build_stress(percentdays = abalone::percentdays,
esm = "ens",
yrst = 1990,
yrend = 1993,
progress = FALSE,
save_path = NULL)
ens_stress
ens_stress <- build_stress(percentdays = abalone::percentdays,
esm = "ens",
yrst = 1990,
yrend = 2100,
progress = FALSE,
save_path = NULL)
ens_stress
terra::plot(ens_stress[[50]])
terra::plot(ens_stress[[80]])
ens_stress[[80]]
terra::plot(ens_stress[[80]], main = "% Stress in 2069")
ens_stress[[50]]
ens_stress[[80]]
ens_stress
terra::plot(ens_stress[[1]], main = "% Stress in 2069")
terra::plot(ens_stress[[1]], main = "% Stress in 1990")
viz_stress(yr = 2098, model = "gfdltv", area = "monterey_bay", def = "def8", extents = abalone::extent_list, infile = abalone::percentdays)
stress_tmap <- viz_stress(yr = 2098, model = "gfdltv", area = "monterey_bay", def = "def8", extents = abalone::extent_list, infile = abalone::percentdays)
stress_tmap
devtools::build_site()
library(abalone)
stress_mont <- viz_stress(yr = 2098, model = "gfdltv", area = "monterey_bay", def = "def8", extents = abalone::extent_list, infile = abalone::percentdays)
stress_mont <- viz_stress(yr = 2098, model = "gfdltv", area = "monterey_bay", def = "def8", extents = abalone::extent_list, infile = abalone::percentdays)
stress_sf <- viz_stress(yr = 2098, model = "gfdltv", area = "san_francisco", def = "def8", extents = abalone::extent_list, infile = abalone::percentdays)
stress_sf
stress_sf <- viz_stress(yr = 2098, model = "gfdltv", area = "channel_islands", def = "def8", extents = abalone::extent_list, infile = abalone::percentdays)
stress_mont
stress_mont
stress_sf
stress_ci <- viz_stress(yr = 2098, model = "gfdltv", area = "channel_islands", def = "def8", extents = abalone::extent_list, infile = abalone::percentdays)
stress_ci
stress_ci <- viz_stress(yr = 1990, model = "gfdltv", area = "channel_islands", def = "def8", extents = abalone::extent_list, infile = abalone::percentdays)
stress_ci
stress_ci <- viz_stress(yr = 2050, model = "gfdltv", area = "channel_islands", def = "def8", extents = abalone::extent_list, infile = abalone::percentdays)
stress_ci
stress_ci <- viz_stress(yr = 2080, model = "gfdltv", area = "channel_islands", def = "def8", extents = abalone::extent_list, infile = abalone::percentdays)
stress_ci
stress_ci <- viz_stress(yr = 2099, model = "gfdltv", area = "channel_islands", def = "def8", extents = abalone::extent_list, infile = abalone::percentdays)
stress_ci
stress_ci <- viz_stress(yr = 2098, model = "gfdltv", area = "channel_islands", def = "def8", extents = abalone::extent_list, infile = abalone::percentdays)
stress_ci
stress_ci <- viz_stress(yr = 2098, model = "gfdltv", area = "monterey_bay", def = "def8", extents = abalone::extent_list, infile = abalone::percentdays)
stress_ci
stress_ci <- viz_stress(yr = 2098, model = "ens", area = "monterey_bay", def = "def8", extents = abalone::extent_list, infile = abalone::percentdays)
stress_ci
ts_viz_percentdays(area = "monterey_bay", yr_range = 1990:2100, def = "def8",
input_file = abalone::percentdays, cons_thresh = 95, lib_thresh = 50)
devtools::build_site()
library(abalone)
head(abalone::percentdays)
tail(abalone::percentdays)
str(abalone::percentdays)
names(str)
names(percentdays)
glimpse(percentdays)
levels(abalone::percentdays$model)
percentdays$model %>% unique
percentdays$model %>% unique
percentdays$model %>% range
percentdays$year %>% range
percentdays$cellID
percentdays$cellID %>% unique %>% length
devtools::build_site()
devtools::build_site()
data_extent_list
extent_list
library(abalone)
extent_list
extent_list
stress_ci <- viz_stress(yr = 2098, model = "ens", area = "monterey_bay", def = "def8", extents = abalone::extent_list, infile = abalone::percentdays)
stress_ci; stress_fb
stress_fb <- viz_stress(yr = 2098, model = "ens", area = "fort_bragg", def = "def8", extents = abalone::extent_list, infile = abalone::percentdays)
stress_ci; stress_fb
devtools::build_site()
library(abalone)
library(patchwork)
install.packages("patchwork")
library(patchwork)
stress_ci + stress_fb + plot_layout(ncol = 2)
stress_ci + stress_fb
stress_ci
stress_ci <- viz_stress(yr = 2098, model = "ens", area = "monterey_bay", def = "def8", extents = abalone::extent_list, infile = abalone::percentdays)
stress_ci <- viz_stress(yr = 2098, model = "ens", area = "monterey_bay", def = "def8", extents = abalone::extent_list, infile = abalone::percentdays)
stress_fb <- viz_stress(yr = 2098, model = "ens", area = "fort_bragg", def = "def8", extents = abalone::extent_list, infile = abalone::percentdays)
stress_ci
stress_ci + stress_fb + plot_layout(ncol = 2)
stress_ci + stress_fb
stress_ci
par(mar = c(2, 2, 2, 1))
stress_ci; stress_fb
devtools::build_site()
library(abalone)
ens_refugia <- build_refugia(percentdays = abalone::percentdays,
esm = "ens", yrst = 1990, yrend = 2100, thresh = 50,
progress = FALSE, save_path = NULL)
ens_refugia <- build_refugia(percentdays = abalone::percentdays,
esm = "ens", yrst = 1990, yrend = 2100, thresh = 50,
progress = FALSE, save_path = NULL)
terra::plot(ens_refugia[[98]], main = "Refugia in 2088")
viz_refugia(yr = 2098, model = "ens", area = "monterey_bay",
def = "def8", extents = abalone::extent_list,
infile = abalone::percentdays, thresh = 50)
viz_refugia(yr = 2098, model = "ens", area = "fort_bragg",
def = "def8", extents = abalone::extent_list,
infile = abalone::percentdays, thresh = 50)
viz_refugia(yr = 2098, model = "ens", area = "san_francisco",
def = "def8", extents = abalone::extent_list,
infile = abalone::percentdays, thresh = 50)
ts_viz_refugia(area = "monterey_bay", yr_range = 1990:2100, def = "def8",
input_file = abalone::percentdays, persist_thresh = 50,
extent_list = abalone::extent_list)
viz_persist(yr = 2070:2099, model = "ens", area = "monterey_bay",
def = "def8", extents = abalone::extent_list, breaks = seq(0, 100, 20),
persist_thresh = 50)
viz_persist(yr = 2070:2099, model = "ens", area = "fort_bragg",
def = "def8", extents = abalone::extent_list, breaks = seq(0, 100, 20),
persist_thresh = 50)
viz_persist(yr = 2070:2099, model = "ens", area = "channel_islands",
def = "def8", extents = abalone::extent_list, breaks = seq(0, 100, 20),
persist_thresh = 50)
viz_persist(yr = 2070:2099, model = "ens", area = "monterey_bay",
def = "def8", extents = abalone::extent_list, breaks = seq(0, 100, 20),
persist_thresh = 50)
viz_persist(yr = 2070:2099, model = "ens", area = "san_francisco",
def = "def8", extents = abalone::extent_list, breaks = seq(0, 100, 20),
persist_thresh = 50)
viz_persist(yr = 2070:2099, model = "ens", area = "monterey_bay",
def = "def8", extents = abalone::extent_list, breaks = seq(0, 100, 20),
persist_thresh = 50)
deltar <- build_delta(thresh = 50, model = "ens", histrange = 2020:2049,
projrange = 2070:2099, save_path = NULL)
terra::plot(deltar)
viz_delta(model = "ens", area = "monterey_bay",
def = "def8", histrange = 2020:2049, projrange = 2070:2099,
extents = abalone::extent_list, persist_thresh = 50, save_path = NULL)
devtools::build_site()
devtools::build_site()
devtools::build_site()
usethis::use_package("quarto")
devtools::build_site()
set.seed(123)  # for reproducibility
sample_rows <- sample(nrow(your_dataframe), size = 5)
sample_rows
# Set seed for reproducibility
set.seed(123)
# Create a dummy data frame with 10 rows
df <- data.frame(
ID = 1:10,
Name = paste("Name", 1:10),
Age = sample(20:40, 10, replace = TRUE)
)
# View the full data
print("Full Data Frame:")
print(df)
# Randomly sample 5 row numbers
sampled_rows <- sample(nrow(df), size = 5)
# Use those row numbers to subset the data frame
df_sampled <- df[sampled_rows, ]
# View the sampled rows
print("Sampled Rows:")
print(df_sampled)
?sample_n
ts_viz_percentdays <- function(area = c("monterey_bay", "channel_islands", "fort_bragg", "san_francisco"),
yr_range = 1990:2100,
def = "def8",
input_file = abalone::percentdays,
cons_thresh = 95,
lib_thresh = 50,
extent_list = abalone::extent_list,
plot_title = paste0(def, " | ", area, " | % of year refugia conditions met")) {
#utils::globalVariables(c("year", "model", "val"))
# Validate area
if (!area %in% names(extent_list)) {
stop("Area not found in extent_list.")
}
# Get bounding box
ex_vals <- extent_list[[area]]
ex <- terra::ext(ex_vals["xmin"], ex_vals["xmax"], ex_vals["ymin"], ex_vals["ymax"])
# Create base raster
base_rast <- cali_rast()
n_layers <- length(yr_range)
# Preallocate raster stacks for each model
gfdl_stack <- terra::rast(ncol = ncol(base_rast),
nrow = nrow(base_rast),
nlyr = n_layers,
extent = terra::ext(base_rast),
crs = terra::crs(base_rast))  %>% terra::crop(ex)
ipsl_stack <- terra::rast(gfdl_stack) %>% terra::crop(ex)
hadtv_stack <- terra::rast(gfdl_stack) %>% terra::crop(ex)
for (i in seq_along(yr_range)) {
yr <- yr_range[i]
all_cells <- terra::cells(base_rast)
cell_coords <- terra::xyFromCell(base_rast, all_cells)
cell_df <- data.frame(cellID = all_cells, x = cell_coords[,1], y = cell_coords[,2])
cell_df_cropped <- dplyr::filter(cell_df,
x >= ex[1] & x <= ex[2] & y >= ex[3] & y <= ex[4])
# GFDL
gfdl_df <- input_file %>% dplyr::filter(model == "gfdltv", year == yr)
gfdl_df_cropped <- dplyr::filter(gfdl_df, cellID %in% cell_df_cropped$cellID)
gfdl_rast <- base_rast %>% terra::crop(ex)
gfdl_rast[terra::cells(gfdl_rast)] <- gfdl_df_cropped$percent
gfdl_stack[[i]] <- gfdl_rast
names(gfdl_stack)[i] <- as.character(yr)
# IPSL
ipsl_df <- input_file %>% dplyr::filter(model == "ipsltv", year == yr)
ipsl_df_cropped <- dplyr::filter(ipsl_df, cellID %in% cell_df_cropped$cellID)
ipsl_rast <- base_rast %>% terra::crop(ex)
ipsl_rast[terra::cells(ipsl_rast)] <- ipsl_df_cropped$percent
ipsl_stack[[i]] <- ipsl_rast
names(ipsl_stack)[i] <- as.character(yr)
# IPSL
had_df <- input_file %>% dplyr::filter(model == "hadtv", year == yr)
had_df_cropped <- dplyr::filter(had_df, cellID %in% cell_df_cropped$cellID)
had_rast <- base_rast %>% terra::crop(ex)
had_rast[terra::cells(had_rast)] <- had_df_cropped$percent
hadtv_stack[[i]] <- had_rast
names(hadtv_stack)[i] <- as.character(yr)
}
emplist <- vector("list", length = length(yr_range))
for (i in 1:length(yr_range)) {
rasty <- gfdl_stack[[i]]
total <- terra::values(rasty, na.rm=T) %>% sum # Sum all the cells in this area
total <- total/terra::values(rasty, na.rm = T) %>% length
df_gfdl <- data.frame(model = "gfdltv", val = total, year = yr_range[i])
rasty <- ipsl_stack[[i]]
total <- terra::values(rasty, na.rm=T) %>% sum
total <- total/terra::values(rasty, na.rm = T) %>% length
df_ipsl <- data.frame(model = "ipsltv", val = total, year = yr_range[i])
rasty <- hadtv_stack[[i]]
total <- terra::values(rasty, na.rm=T) %>% sum
total <- total/terra::values(rasty, na.rm = T) %>% length
df_had <- data.frame(model = "hadtv", val = total, year = yr_range[i])
df <- rbind(df_gfdl, df_ipsl, df_had)
ensdf <- data.frame(model = "ens",
year = yr_range[i],
val = (df_gfdl$val + df_had$val +df_ipsl$val)/3)
df <- rbind(df, ensdf)
emplist[[i]] <- df
}
all1 <- do.call(rbind, emplist)
# Plot
ggplot2::ggplot(data = all1, ggplot2::aes(x = year)) +
ggplot2::geom_line(data = dplyr::filter(all1, model == "gfdltv"),
ggplot2::aes(y = val, color = "gfdltv"), size = 0.4) +
ggplot2::geom_line(data = dplyr::filter(all1, model == "hadtv"),
ggplot2::aes(y = val, color = "hadtv"), size = 0.4) +
ggplot2::geom_line(data = dplyr::filter(all1, model == "ipsltv"),
ggplot2::aes(y = val, color = "ipsltv"), size = 0.4) +
ggplot2::geom_line(data = dplyr::filter(all1, model == "ens"),
ggplot2::aes(y = val, color = "ens"), size = 1.5) +
ggplot2::scale_color_manual(values = c(
"ens" = "black",
"gfdltv" = "#8E4A49",
"ipsltv" = "#BDC4A7",
"hadtv" = "#3F7CAC"
), name = "Model") +
ggplot2::labs(
title = plot_title,
x = "Year", y = "% Days"
) +
ggplot2::theme_minimal() +
ggplot2::ylim(0, 100) +
ggplot2::theme(
panel.grid.minor = ggplot2::element_blank(),
plot.margin = ggplot2::unit(c(1, 0.1, 0.1, 0.1), "cm"),
axis.title = ggplot2::element_text(size = 16, face = "bold"),
axis.text = ggplot2::element_text(size = 14),
legend.title = ggplot2::element_text(size = 14),
legend.text = ggplot2::element_text(size = 12),
title = ggplot2::element_text(size = 14)
) +
ggplot2::geom_hline(ggplot2::aes(yintercept = lib_thresh), lty = "dashed") +
ggplot2::geom_hline(ggplot2::aes(yintercept = cons_thresh), lty = "dashed")
}
ts_viz_percentdays(area = "monterey_bay", yr_range = 1990:2100, def = "def8",
input_file = abalone::percentdays, cons_thresh = 95, lib_thresh = 50)
library(abalone)
ts_viz_percentdays(area = "monterey_bay", yr_range = 1990:2100, def = "def8",
input_file = abalone::percentdays, cons_thresh = 95, lib_thresh = 50)
library(magrittr)
ts_viz_percentdays(area = "monterey_bay", yr_range = 1990:2100, def = "def8",
input_file = abalone::percentdays, cons_thresh = 95, lib_thresh = 50)
devtools::build_site()
devtools::build_site()
quarto::quarto_path()
devtools::build_site()
